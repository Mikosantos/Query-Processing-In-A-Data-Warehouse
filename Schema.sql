DROP DATABASE IF EXISTS dw_stream_games;
CREATE DATABASE dw_stream_games;
USE dw_stream_games;

-- DIMENSION TABLE/S

CREATE TABLE DIM_GAME (
	AppID INT PRIMARY KEY,
    Name VARCHAR(255),
    Release_date DATE
);

CREATE TABLE DIM_GENRE (
    genreID VARCHAR(255) PRIMARY KEY,
    genreName VARCHAR(255)
);

CREATE TABLE DIM_CATEGORY (
    categoryID VARCHAR(255) PRIMARY KEY,
    categoryName VARCHAR(255)
);

CREATE TABLE DIM_DEVELOPER (
    devID VARCHAR(255) PRIMARY KEY,
    devName VARCHAR(255)
);

CREATE TABLE DIM_PUBLISHER (
    pubID VARCHAR(255) PRIMARY KEY,
    pubName VARCHAR(255)
);

-- FACT TABLE

CREATE TABLE FACT_STREAM (
    fact_id INT PRIMARY KEY AUTO_INCREMENT,
    ave_playtime_forever INT,
    recommendation_count INT,
    metacritic_score INT,
    positive_count INT,
    negative_count INT,
    peak_CCU INT,
    Price DECIMAL(5, 2),
    Estimated_owners VARCHAR(255),
    -- FOREIGN KEY TO GAME DIMENSION
    AppID INT,
    FOREIGN KEY (AppID) REFERENCES DIM_GAME(AppID)
);

CREATE TABLE BRIDGE_GAME_GENRE (
    AppID INT,
    genreID VARCHAR(255),
    FOREIGN KEY (AppID) REFERENCES DIM_GAME(AppID),
    FOREIGN KEY (genreID) REFERENCES DIM_GENRE(genreID)
);

-- BRIDGE TABLE/S

CREATE TABLE BRIDGE_GAME_CATEGORY (
    AppID INT,
    categoryID VARCHAR(255),
    FOREIGN KEY (AppID) REFERENCES DIM_GAME(AppID),
    FOREIGN KEY (categoryID) REFERENCES DIM_CATEGORY(categoryID)
);

CREATE TABLE BRIDGE_GAME_DEVELOPER (
    AppID INT,
    devID VARCHAR(255),
    FOREIGN KEY (AppID) REFERENCES DIM_GAME(AppID),
    FOREIGN KEY (devID) REFERENCES DIM_DEVELOPER(devID)
);

CREATE TABLE BRIDGE_GAME_PUBLISHER (
    AppID INT,
    pubID VARCHAR(255),
    FOREIGN KEY (AppID) REFERENCES DIM_GAME(AppID),
    FOREIGN KEY (pubID) REFERENCES DIM_PUBLISHER(pubID)
);
